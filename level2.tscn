[gd_scene load_steps=28 format=2]

[ext_resource path="res://assets/entities/Building.png" type="Texture" id=1]
[ext_resource path="res://assets/entities/House_1.png" type="Texture" id=2]
[ext_resource path="res://LampPost.tscn" type="PackedScene" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://assets/entities/road.png" type="Texture" id=5]
[ext_resource path="res://assets/characters/npc.png" type="Texture" id=6]
[ext_resource path="res://assets/entities/broken_house.png" type="Texture" id=7]
[ext_resource path="res://assets/entities/hotdog.png" type="Texture" id=8]
[ext_resource path="res://Invesitigator.tscn" type="PackedScene" id=9]
[ext_resource path="res://Dialoge_system.tscn" type="PackedScene" id=10]
[ext_resource path="res://level2.gd" type="Script" id=11]
[ext_resource path="res://door.tscn" type="PackedScene" id=12]
[ext_resource path="res://assets/fonts/8bitOperatorPlusSC-Regular.ttf" type="DynamicFontData" id=13]
[ext_resource path="res://Camera2D.gd" type="Script" id=15]
[ext_resource path="res://item.tscn" type="PackedScene" id=16]
[ext_resource path="res://flashlight.tscn" type="PackedScene" id=17]
[ext_resource path="res://Enemy.tscn" type="PackedScene" id=18]

[sub_resource type="Environment" id=3]
background_mode = 4
background_energy = 2.0
auto_exposure_enabled = true
auto_exposure_scale = 0.02
auto_exposure_max_luma = 0.82
dof_blur_far_distance = 2.0
dof_blur_far_amount = 0.33
glow_enabled = true
glow_intensity = 1.52
glow_strength = 0.49
glow_bloom = 0.09
glow_blend_mode = 0

[sub_resource type="Shader" id=7]
code = "

shader_type canvas_item;


uniform bool overlay = false;

uniform float scanlines_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float scanlines_width : hint_range(0.0, 0.5) = 0.25;
uniform float grille_opacity : hint_range(0.0, 1.0) = 0.3;
uniform vec2 resolution = vec2(640.0, 480.0); 

uniform bool pixelate = true; 

uniform bool roll = true;
uniform float roll_speed = 8.0; 
uniform float roll_size : hint_range(0.0, 100.0) = 15.0;
uniform float roll_variation : hint_range(0.1, 5.0) = 1.8;
uniform float distort_intensity : hint_range(0.0, 0.2) = 0.05; 

uniform float noise_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float noise_speed = 5.0;

uniform float static_noise_intensity : hint_range(0.0, 1.0) = 0.06;

uniform float aberration : hint_range(-1.0, 1.0) = 0.03; 
uniform float brightness = 1.4; 
uniform bool discolor = true; 

uniform float warp_amount :hint_range(0.0, 5.0) = 1.0; 
uniform bool clip_warp = false;

uniform float vignette_intensity = 0.4; 
uniform float vignette_opacity : hint_range(0.0, 1.0) = 0.5;


vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}


float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}


vec2 warp(vec2 uv){
	vec2 delta = uv - 0.5;
	float delta2 = dot(delta.xy, delta.xy);
	float delta4 = delta2 * delta2;
	float delta_offset = delta4 * warp_amount;
	
	return uv + delta * delta_offset;
}

float border (vec2 uv){
	float radius = min(warp_amount, 0.08);
	radius = max(min(min(abs(radius * 2.0), abs(1.0)), abs(1.0)), 1e-5);
	vec2 abs_uv = abs(uv * 2.0 - 1.0) - vec2(1.0, 1.0) + radius;
	float dist = length(max(vec2(0.0), abs_uv)) / radius;
	float square = smoothstep(0.96, 1.0, dist);
	return clamp(1.0 - square, 0.0, 1.0);
}


float vignette(vec2 uv){
	uv *= 1.0 - uv.xy;
	float vignette = uv.x * uv.y * 15.0;
	return pow(vignette, vignette_intensity * vignette_opacity);
}

void fragment()
{
	vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV); 
	vec2 text_uv = uv;
	vec2 roll_uv = vec2(0.0);
	float time = roll ? TIME : 0.0;
	


	if (pixelate)
	{
		text_uv = ceil(uv * resolution) / resolution;
	}
	
	
	float roll_line = 0.0;
	if (roll || noise_opacity > 0.0)
	{
		
		roll_line = smoothstep(0.3, 0.9, sin(uv.y * roll_size - (time * roll_speed) ) );

		roll_line *= roll_line * smoothstep(0.3, 0.9, sin(uv.y * roll_size * roll_variation - (time * roll_speed * roll_variation) ) );
		
		roll_uv = vec2(( roll_line * distort_intensity * (1.-UV.x)), 0.0);
	}
	
	vec4 text;
	if (roll)
	{
		
		text.r = texture(SCREEN_TEXTURE, text_uv + roll_uv * 0.8 + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv + roll_uv * 1.2 - vec2(aberration, 0.0) * .1 ).g;
		text.b = texture(SCREEN_TEXTURE, text_uv + roll_uv).b;
		text.a = 1.0;
	}
	else
	{
		
		text.r = texture(SCREEN_TEXTURE, text_uv + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv - vec2(aberration, 0.0) * .1).g;
		text.b = texture(SCREEN_TEXTURE, text_uv).b;
		text.a = 1.0;
	}
	//never gonna give you up!
	float r = text.r;
	float g = text.g;
	float b = text.b;
	
	uv = warp(UV);
	
	if (grille_opacity > 0.0){
		
		float g_r = smoothstep(0.85, 0.95, abs(sin(uv.x * (resolution.x * 3.14159265))));
		r = mix(r, r * g_r, grille_opacity);
		
		float g_g = smoothstep(0.85, 0.95, abs(sin(1.05 + uv.x * (resolution.x * 3.14159265))));
		g = mix(g, g * g_g, grille_opacity);
		
		float b_b = smoothstep(0.85, 0.95, abs(sin(2.1 + uv.x * (resolution.x * 3.14159265))));
		b = mix(b, b * b_b, grille_opacity);
		
	}
	
	
	text.r = clamp(r * brightness, 0.0, 1.0);
	text.g = clamp(g * brightness, 0.0, 1.0);
	text.b = clamp(b * brightness, 0.0, 1.0);
	
	
	float scanlines = 0.5;
	if (scanlines_opacity > 0.0)
	{
		
		scanlines = smoothstep(scanlines_width, scanlines_width + 0.5, abs(sin(uv.y * (resolution.y * 3.14159265))));
		text.rgb = mix(text.rgb, text.rgb * vec3(scanlines), scanlines_opacity);
	}
	
	
	if (noise_opacity > 0.0)
	{
		
		float noise = smoothstep(0.4, 0.5, noise(uv * vec2(2.0, 200.0) + vec2(10.0, (TIME * (noise_speed))) ) );
		
		
		roll_line *= noise * scanlines * clamp(random((ceil(uv * resolution) / resolution) + vec2(TIME * 0.8, 0.0)).x + 0.8, 0.0, 1.0);

		text.rgb = clamp(mix(text.rgb, text.rgb + roll_line, noise_opacity), vec3(0.0), vec3(1.0));
	}
	

	if (static_noise_intensity > 0.0)
	{
		text.rgb += clamp(random((ceil(uv * resolution) / resolution) + fract(TIME)).x, 0.0, 1.0) * static_noise_intensity;
	}
	
	
	text.rgb *= border(uv);
	text.rgb *= vignette(uv);
	
	if (clip_warp)
	{
		text.a = border(uv);
	}
	float saturation = 0.5;
	float contrast = 1.2;
	if (discolor)
	{
		// Saturation
		vec3 greyscale = vec3(text.r + text.g + text.b) / 3.;
		text.rgb = mix(text.rgb, greyscale, saturation);
		
		// Contrast
		float midpoint = pow(0.5, 2.2);
		text.rgb = (text.rgb - vec3(midpoint)) * contrast + midpoint;
	}
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 7 )
shader_param/overlay = false
shader_param/scanlines_opacity = 0.4
shader_param/scanlines_width = 0.25
shader_param/grille_opacity = 0.3
shader_param/resolution = Vector2( 1280, 960 )
shader_param/pixelate = false
shader_param/roll = true
shader_param/roll_speed = 3.0
shader_param/roll_size = 10.0
shader_param/roll_variation = 4.0
shader_param/distort_intensity = 0.2
shader_param/noise_opacity = 0.5
shader_param/noise_speed = 1.0
shader_param/static_noise_intensity = 0.06
shader_param/aberration = -0.015
shader_param/brightness = 1.4
shader_param/discolor = true
shader_param/warp_amount = 1.0
shader_param/clip_warp = false
shader_param/vignette_intensity = 0.3
shader_param/vignette_opacity = 0.5

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;

uniform vec2 size = vec2( 64.0, 48.0 );

void fragment( )
{
	vec2 norm_size = size * SCREEN_PIXEL_SIZE;
	bool half = mod( SCREEN_UV.y / 2.0, norm_size.y ) / norm_size.y < 0.5;
	vec2 uv = SCREEN_UV + vec2( norm_size.x * 0.5 * float( half ), 0.0 );
	vec2 center_uv = floor( uv / norm_size ) * norm_size;
	vec2 norm_uv = mod( uv, norm_size ) / norm_size;
	center_uv += mix(
		vec2( 0.0, 0.0 )
	,	mix(
			mix(
				vec2( norm_size.x, -norm_size.y )
			,	vec2( 0.0, -norm_size.y )
			,	float( norm_uv.x < 0.5 )
			)
		,	mix(
				vec2( 0.0, -norm_size.y )
			,	vec2( -norm_size.x, -norm_size.y )
			,	float( norm_uv.x < 0.5 )
			)
		,	float( half )
		)
	,	float( norm_uv.y < 0.3333333 ) * float( norm_uv.y / 0.3333333 < ( abs( norm_uv.x - 0.5 ) * 2.0 ) )
	);

	COLOR = textureLod( SCREEN_TEXTURE, center_uv, 0.0 );
}"

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 13 )
shader_param/size = Vector2( 7, 7 )

[sub_resource type="DynamicFont" id=19]
size = 20
font_data = ExtResource( 13 )

[sub_resource type="RectangleShape2D" id=15]
extents = Vector2( 168.875, 130.5 )

[sub_resource type="RectangleShape2D" id=17]
extents = Vector2( 133.5, 55 )

[sub_resource type="RectangleShape2D" id=18]
extents = Vector2( 118, 85 )

[sub_resource type="Environment" id=16]
background_mode = 4
auto_exposure_enabled = true
auto_exposure_min_luma = 5.79

[node name="level2" type="Node2D"]
script = ExtResource( 11 )

[node name="WorldBg" type="Control" parent="."]
margin_left = -3036.0
margin_top = -2813.0
margin_right = 2084.0
margin_bottom = 187.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="WorldBg"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -5863.0
margin_top = -129.0
margin_right = 3535.0
margin_bottom = 5486.0
color = Color( 0.196078, 0.309804, 0.313726, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Road" type="Sprite" parent="."]
position = Vector2( -509.25, 501.625 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road2" type="Sprite" parent="."]
position = Vector2( 344, 504 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road5" type="Sprite" parent="."]
position = Vector2( -510.75, -692.375 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road6" type="Sprite" parent="."]
position = Vector2( 342.5, -690 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road7" type="Sprite" parent="."]
position = Vector2( 1207.25, -678.375 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road8" type="Sprite" parent="."]
position = Vector2( 2060.5, -676 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road15" type="Sprite" parent="."]
position = Vector2( -2251, 2656 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road16" type="Sprite" parent="."]
position = Vector2( -1487.5, 2653 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road17" type="Sprite" parent="."]
position = Vector2( -3958.75, 2653.63 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road18" type="Sprite" parent="."]
position = Vector2( -3105.5, 2656 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road11" type="Sprite" parent="."]
position = Vector2( -597.75, 1547.63 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road12" type="Sprite" parent="."]
position = Vector2( 255.5, 1550 )
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road3" type="Sprite" parent="."]
position = Vector2( -848, 175 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road4" type="Sprite" parent="."]
position = Vector2( -848, -183 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road9" type="Sprite" parent="."]
position = Vector2( 744.433, 1200.84 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road10" type="Sprite" parent="."]
position = Vector2( 744.433, 842.837 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road19" type="Sprite" parent="."]
position = Vector2( -4289.57, 2303.84 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road20" type="Sprite" parent="."]
position = Vector2( -4289.57, 1945.84 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road13" type="Sprite" parent="."]
position = Vector2( -986.567, 2247.84 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road14" type="Sprite" parent="."]
position = Vector2( -986.567, 1889.84 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road21" type="Sprite" parent="."]
position = Vector2( -986.568, 2311.84 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="Road22" type="Sprite" parent="."]
position = Vector2( -986.568, 1933.84 )
rotation = 1.56422
scale = Vector2( 0.680876, 0.42647 )
texture = ExtResource( 5 )

[node name="item" parent="." instance=ExtResource( 16 )]
position = Vector2( 449, 80 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 3 )

[node name="Lamps" type="MultiMeshInstance2D" parent="."]

[node name="RustyLampPost" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( 31, 60 )

[node name="RustyLampPost2" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( 904, 1525 )

[node name="RustyLampPost3" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( 2101, -1034 )

[node name="RustyLampPost4" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( 427, 586 )

[node name="RustyLampPost5" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( -671, 1367 )

[node name="RustyLampPost6" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( -1113, -319 )

[node name="RustyLampPost7" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( -688, 326 )

[node name="RustyLampPost8" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( 412, 303 )

[node name="RustyLampPost9" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( -2136, 2868 )

[node name="RustyLampPost10" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( -2175, 2444 )

[node name="RustyLampPost11" parent="Lamps" instance=ExtResource( 3 )]
position = Vector2( -320, 579 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Dialoge_system" parent="CanvasLayer" instance=ExtResource( 10 )]
dialogPath = "res://level2.json"

[node name="Icon" type="Sprite" parent="CanvasLayer"]
visible = false
material = SubResource( 5 )
position = Vector2( 516.014, 301.229 )
rotation = -3.13639
scale = Vector2( 16.043, 9.22861 )
texture = ExtResource( 4 )
flip_h = true

[node name="Icon2" type="Sprite" parent="CanvasLayer"]
visible = false
material = SubResource( 14 )
position = Vector2( 527, 273 )
scale = Vector2( 21.7266, 13.1328 )
texture = ExtResource( 4 )

[node name="Label" type="Label" parent="CanvasLayer"]
margin_left = 217.0
margin_top = 559.0
margin_right = 826.0
margin_bottom = 588.0
custom_fonts/font = SubResource( 19 )
text = "hint : the fastest thing in the world can kill the faker"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="flashlight" parent="." instance=ExtResource( 17 )]
position = Vector2( 896, 281 )

[node name="Timer" type="Timer" parent="."]
wait_time = 0.066

[node name="Enemy" parent="." instance=ExtResource( 18 )]
position = Vector2( -4283, 1590 )
scale = Vector2( 0.9, 0.9 )

[node name="StaticBody2D" type="StaticBody2D" parent="."]

[node name="Hotdog" type="Sprite" parent="StaticBody2D"]
position = Vector2( -4284, 1410 )
texture = ExtResource( 8 )

[node name="House1" type="Sprite" parent="StaticBody2D"]
position = Vector2( -328, -117 )
scale = Vector2( 1.24615, 1.28431 )
texture = ExtResource( 2 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( -320, -122.5 )
shape = SubResource( 15 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( -2445.5, 2433 )
shape = SubResource( 17 )

[node name="CollisionShape2D3" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 1059, -867 )
shape = SubResource( 18 )

[node name="CollisionShape2D4" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( -3517, 2446 )
shape = SubResource( 18 )

[node name="CollisionShape2D5" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( -3516, 2446 )
shape = SubResource( 18 )

[node name="CollisionShape2D6" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 2, 1221 )
shape = SubResource( 18 )

[node name="YSort" type="YSort" parent="."]

[node name="Invesitigator" parent="YSort" instance=ExtResource( 9 )]
position = Vector2( 239, 186 )

[node name="Camera2D" type="Camera2D" parent="YSort/Invesitigator"]
current = true
zoom = Vector2( 1.5, 1.5 )
smoothing_enabled = true
smoothing_speed = 4.0
script = ExtResource( 15 )

[node name="Building" type="Sprite" parent="."]
position = Vector2( -2450, 2050 )
scale = Vector2( 2.292, 2.591 )
texture = ExtResource( 1 )

[node name="WorldEnvironment2" type="WorldEnvironment" parent="."]
environment = SubResource( 16 )

[node name="Npc" type="Sprite" parent="."]
modulate = Color( 1, 0, 0, 1 )
position = Vector2( 8.00003, 505 )
rotation = -1.53619
scale = Vector2( 0.411896, 0.429383 )
texture = ExtResource( 6 )

[node name="Npc2" type="Sprite" parent="."]
modulate = Color( 1, 0, 0, 1 )
position = Vector2( 53, 1420 )
rotation = -3.14627
scale = Vector2( 0.411896, 0.429383 )
texture = ExtResource( 6 )

[node name="Npc3" type="Sprite" parent="."]
modulate = Color( 1, 0, 0, 1 )
position = Vector2( -831, 104 )
rotation = 0.013028
scale = Vector2( 0.411896, 0.429383 )
texture = ExtResource( 6 )

[node name="BrokenHouse" type="Sprite" parent="."]
position = Vector2( 5.99988, 1209 )
rotation = -0.000695306
texture = ExtResource( 7 )

[node name="BrokenHouse2" type="Sprite" parent="."]
position = Vector2( -3512, 2433 )
rotation = -0.000695306
texture = ExtResource( 7 )

[node name="BrokenHouse3" type="Sprite" parent="."]
position = Vector2( 1063, -877 )
rotation = -0.000695306
texture = ExtResource( 7 )

[node name="door" parent="." instance=ExtResource( 12 )]
position = Vector2( -361, -36 )
path = "res://house.tscn"

[connection signal="body_entered" from="door/StaticBody2D" to="YSort/Invesitigator" method="_on_StaticBody2D_body_entered"]

[editable path="door"]
